{"version":3,"sources":["store.js","App.jsx","index.js"],"names":["createStore","state","arguments","length","undefined","action","type","classNames","clssnms","FeatureCard","_ref","feature","name","_feature$release","release","done","tickets","builds","react_default","a","createElement","Card_default","className","CardContent_default","--hidden","map","ticket","key","id","--open","status","--closed","span","rel","target","href","link","build","jobName","appLink","style","order","crxLink","color","App","this","props","features","App_FeatureCard","React","Component","connect","webSocket","WebSocket","onopen","send","setInterval","prevData","onmessage","event","data","console","log","JSON","parse","store","dispatch","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a6bf3deb.chunk.js","sourcesContent":["import { createStore } from 'redux'\r\n\r\nfunction store(state = null, action) {\r\n    if (action.type === 'SET_STORE') {\r\n        return action.state;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default createStore(store);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Card from '@material-ui/core/Card';\r\nimport clssnms from 'clssnms';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport './App.scss';\r\n\r\nconst classNames = clssnms('app');\r\n\r\nconst FeatureCard = ({ feature }) => {\r\n  const { name, release: { done, tickets, type, builds } } = feature;\r\n//     console.log(`Build[${build.type}]: ${buildStatusText(build.status)} - ${link}`);\r\n  return (\r\n    <Card className={classNames('card', { done })}>\r\n      <CardContent>\r\n\r\n        <div className={classNames('header')}>\r\n          {name} [{type}]<span> {done ? 'finished' : 'in work'}</span>\r\n        </div>\r\n\r\n        <div className={classNames('tickets', {'--hidden': !tickets.length})}>\r\n          Tickets:\r\n          {tickets.map(ticket => (\r\n            <div\r\n              key={ticket.id}\r\n              className={classNames('ticket', {\r\n                '--open': ticket.status === 'open',\r\n                '--closed': ticket.span !== 'open',\r\n              })}\r\n            >\r\n              <a rel=\"noopener noreferrer\" target=\"_blank\" href={ticket.link}>{name}</a>\r\n              <span> ({ticket.status})</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className={classNames('builds', {'--hidden': !builds.length})}>\r\n          Builds:\r\n          {builds.map(build => (\r\n            <div key={build.jobName} className=\"build-wrapper\">\r\n              {build.appLink ? <div className={classNames('build')} style={{order: 0}}><a rel=\"noopener noreferrer\" target=\"_blank\" href={build.appLink}>App link</a></div> : null}\r\n              {build.crxLink ? <div className={classNames('build')} style={{order: 1}}><a rel=\"noopener noreferrer\" target=\"_blank\" href={build.crxLink}>Crx link</a></div> : null}\r\n              <div className={classNames('build')}>\r\n                <a rel=\"noopener noreferrer\" target=\"_blank\" href={build.link}>Build [{build.type}]</a>\r\n                <span style={{color: build.color}}> ({build.status})</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n      </CardContent>\r\n    </Card >\r\n  )\r\n};\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    if (!this.props.state) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className={classNames()}>\r\n        {this.props.state.features.map(feature => <FeatureCard key={feature.name} feature={feature} />)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst webSocket = new WebSocket(\"ws://localhost:5999\");\r\nwebSocket.onopen = function () {\r\n    webSocket.send('');\r\n    setInterval(() => {\r\n        webSocket.send('');\r\n    }, 5000);\r\n};\r\n\r\nlet prevData = null;\r\nwebSocket.onmessage = function (event) {\r\n    if (event.data !== prevData) {\r\n        prevData = event.data;\r\n        console.log(JSON.parse(event.data));\r\n        store.dispatch({ type: 'SET_STORE', state: JSON.parse(event.data) });\r\n    }\r\n}\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));"],"sourceRoot":""}